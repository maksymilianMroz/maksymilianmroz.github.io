{"version":3,"sources":["components/Portfolio/PortfolioItem/PortfolioItem.module.scss","components/TextSection/TextSection.module.scss","components/Portfolio/Portfolio.module.scss","components/TextSection/TextSection.js","components/Portfolio/PortfolioItem/PortfolioItem.js","components/Portfolio/Portfolio.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","TextSection","className","classes","section","section__header","section__content__one","section__content__two","PortfolioItem","infoContainer","infoContainer__header","infoContainer__description","infoContainer__links","href","repository__link","live__link","Portfolio","portfolio__header","portfolio__items","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,cAAgB,qCAAqC,sBAAwB,6CAA6C,2BAA6B,kDAAkD,qBAAuB,4CAA4C,iBAAmB,wCAAwC,WAAa,oC,gBCA3ZD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,QAAU,6BAA6B,gBAAkB,qCAAqC,sBAAwB,2CAA2C,sBAAwB,6C,gBCA1PD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,QAAU,2BAA2B,kBAAoB,qCAAqC,iBAAmB,sC,iLCc7JC,EAZK,WAChB,OACI,yBAAKC,UAAWC,IAAQF,aACpB,yBAAKC,UAAWC,IAAQC,SACpB,wBAAIF,UAAWC,IAAQE,iBAAvB,OAA4C,6BAA5C,WACA,uBAAGH,UAAWC,IAAQG,uBAAtB,kCACA,uBAAGJ,UAAWC,IAAQI,uBAAtB,2I,gCCaDC,EAnBO,WAClB,OACI,yBAAKN,UAAWC,IAAQK,eACpB,yBAAKN,UAAWC,IAAQM,eACpB,wBAAIP,UAAWC,IAAQO,uBAAvB,QAGA,uBAAGR,UAAWC,IAAQQ,4BAAtB,mGAGA,yBAAKT,UAAWC,IAAQS,sBACpB,uBAAGC,KAAK,IAAIX,UAAWC,IAAQW,kBAA/B,UACA,uBAAGD,KAAK,IAAIX,UAAWC,IAAQY,YAA/B,YCOLC,EAlBG,WACd,OACI,yBAAKd,UAAWC,IAAQa,WACpB,yBAAKd,UAAWC,IAAQC,SACpB,wBAAIF,UAAWC,IAAQc,mBAAvB,iBACA,yBAAKf,UAAWC,IAAQe,kBAEpB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,UCELC,MAVf,WACE,OACE,yBAAKjB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCckB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.abe30596.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PortfolioItem\":\"PortfolioItem_PortfolioItem__h8Yo-\",\"infoContainer\":\"PortfolioItem_infoContainer__2hqeS\",\"infoContainer__header\":\"PortfolioItem_infoContainer__header__3ks4O\",\"infoContainer__description\":\"PortfolioItem_infoContainer__description__2MaTE\",\"infoContainer__links\":\"PortfolioItem_infoContainer__links__1Ljij\",\"repository__link\":\"PortfolioItem_repository__link__pgSOT\",\"live__link\":\"PortfolioItem_live__link__187AN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextSection\":\"TextSection_TextSection__13-Mm\",\"section\":\"TextSection_section__12DOx\",\"section__header\":\"TextSection_section__header__3iDlO\",\"section__content__one\":\"TextSection_section__content__one__2yHet\",\"section__content__two\":\"TextSection_section__content__two__1nnAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Portfolio\":\"Portfolio_Portfolio__1f5JM\",\"section\":\"Portfolio_section__dtIfe\",\"portfolio__header\":\"Portfolio_portfolio__header__3aEsy\",\"portfolio__items\":\"Portfolio_portfolio__items__zOD4o\"};","import React from 'react';\r\nimport classes from './TextSection.module.scss';\r\n\r\nconst TextSection = () => {\r\n    return (\r\n        <div className={classes.TextSection}>\r\n            <div className={classes.section}>\r\n                <h1 className={classes.section__header}>HEY <br/> THERE.</h1>\r\n                <p className={classes.section__content__one}>My name is Max. I love coding.</p>\r\n                <p className={classes.section__content__two}>I live in Warsaw. Every day I try to learn as much as possible to be better frontend developer. Find out more about me! ðŸ”¥</p> \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TextSection;","import React from 'react';\r\nimport classes from './PortfolioItem.module.scss';\r\n\r\nconst PortfolioItem = () => {\r\n    return (\r\n        <div className={classes.PortfolioItem}>\r\n            <div className={classes.infoContainer}>\r\n                <h3 className={classes.infoContainer__header}>\r\n                    Test\r\n                </h3>\r\n                <p className={classes.infoContainer__description}>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris volutpat porttitor consectetur.\r\n                </p>\r\n                <div className={classes.infoContainer__links}>\r\n                    <a href=\"#\" className={classes.repository__link}>Github</a>\r\n                    <a href=\"#\" className={classes.live__link}>Live</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PortfolioItem;","import React from 'react';\r\nimport classes from './Portfolio.module.scss';\r\nimport PortfolioItem from './PortfolioItem/PortfolioItem';\r\n\r\nconst Portfolio = () => {\r\n    return (\r\n        <div className={classes.Portfolio}>\r\n            <div className={classes.section}>\r\n                <h2 className={classes.portfolio__header}>My portfolio!</h2>\r\n                <div className={classes.portfolio__items}>\r\n\r\n                    <PortfolioItem />\r\n                    <PortfolioItem />\r\n                    <PortfolioItem />\r\n                    <PortfolioItem />\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Portfolio;","import React from 'react';\r\nimport './App.scss';\r\n\r\nimport TextSection from '../components/TextSection/TextSection';\r\nimport Portfolio from '../components/Portfolio/Portfolio';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <TextSection />\r\n      <Portfolio />\r\n      <TextSection />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}